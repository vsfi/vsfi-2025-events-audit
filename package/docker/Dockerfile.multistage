# Dockerfile with multistage build
FROM registry.vsfi.ru/library/golang:1.23-bookworm AS builder
RUN printf "deb [trusted=yes] https://nexus.vsfi.ru/repository/debian-12/ bookworm main non-free-firmware\ndeb [trusted=yes] https://nexus.vsfi.ru/repository/debian-12/ bookworm-updates main non-free-firmware\ndeb [trusted=yes] https://nexus.vsfi.ru/repository/debian-12-security/ bookworm-security main\ndeb [trusted=yes] https://nexus.vsfi.ru/repository/apt-docker/ bookworm stable\n" > /etc/apt/sources.list
RUN printf "machine nexus.vsfi.ru\nlogin debian\npassword debian\n" > /etc/apt/auth.conf
# Install git and ca-certificates (needed for go modules)
RUN  apt update && apt install -y git ca-certificates tzdata && rm -rf /var/lib/apt/lists/*

# Create appuser for final stage
RUN adduser --disabled-password appuser

# Set working directory
WORKDIR /build

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN GOPROXY=https://go-proxy-user:fn298f0g21fwr@nexus.vsfi.ru/repository/go-mod-shisha-server go mod download -x

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o events-audit ./

# Final stage
FROM scratch

# Import ca-certificates from builder
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Import timezone data
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Import user and group files
COPY --from=builder /etc/passwd /etc/passwd

# Copy the binary
COPY --from=builder /build/events-audit /events-audit

# Use non-root user
USER appuser

# Expose port (if needed)
EXPOSE 8080

# Set default command
ENTRYPOINT ["/events-audit"]